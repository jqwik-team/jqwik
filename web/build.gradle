plugins {
	id 'jqwik.common-configuration'
	id 'jqwik.module-configuration'
}

description = "Jqwik Web module"

jar {
	archiveBaseName.set('jqwik-web')
	archiveVersion.set("${jqwikVersion}")
}

task publishWebJavadoc(type: Javadoc) {
	source = file('./src/main/java')
	failOnError = false
	destinationDir = file("${rootDir}/docs/javadoc")
	include '**/api/**'
}

publishing {
	publications {
		jqwikWeb(MavenPublication) {
			groupId = 'net.jqwik'
			artifactId = 'jqwik-web'
			from components.java
			pom {
				groupId = 'net.jqwik'
				name = 'jqwik-web'
				description = project.description
				url = 'https://jqwik.net/'
				licenses {
					license {
						name = 'Eclipse Public License - v 2.0'
						url = 'http://www.eclipse.org/legal/epl-v20.html'
					}
				}
				developers {
					developer {
						id = 'jlink'
						name = 'Johannes Link'
						email = 'business@johanneslink.net'
					}
					developer {
						id = 'zinki97'
						name = 'Johannes Zink'
						email = 'support@johannes-games.de'
					}
				}
				scm {
					connection = 'scm:git:git://github.com/jqwik-team/jqwik.git'
					developerConnection = 'scm:git:git://github.com/jqwik-team/jqwik.git'
					url = 'https://github.com/jqwik-team/jqwik'
				}
			}
		}
	}
}

signing {
	if (!isSnapshotRelease) {
		sign publishing.publications.jqwikWeb
	}
}

test {
	useJUnitPlatform {
		includeEngines 'jqwik'
	}

	include 'net/**/*Properties.class'
	include 'net/**/*Test.class'
	include 'net/**/*Tests.class'

	reports {
		junitXml.required = true
	}

	testLogging.showStandardStreams = showStandardStreams
}

dependencies {
	api(project(":api"))
	api("org.opentest4j:opentest4j:${opentest4jVersion}")

	testImplementation(project(":testing"))

	// Works around an annoying bug in IntelliJ running tests on packages
	testImplementation("org.junit.jupiter:junit-jupiter:${junitJupiterVersion}")

	// To verify generated email addresses
	testImplementation('com.github.seancfoley:ipaddress:5.4.1')

	testImplementation("org.assertj:assertj-core:${assertJVersion}")
	testRuntimeOnly(project(":engine"))
}
