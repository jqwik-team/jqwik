plugins {
	id 'jqwik.common-configuration'
	id 'jqwik.module-configuration'
}

description = "Jqwik Engine module"

jar {
	archiveBaseName.set('jqwik-engine')
	archiveVersion.set("${jqwikVersion}")
}

task publishApiJavadoc(type: Javadoc) {
	source = file('./src/main/java')
	failOnError = false
	destinationDir = file("${rootDir}/docs/javadoc")
	include '**/api/**'
}

publishing {
	publications {
		jqwikEngine(MavenPublication) {
			groupId = 'net.jqwik'
			artifactId = 'jqwik-engine'
			from components.java
			pom {
				groupId = 'net.jqwik'
				name = 'jqwik-engine'
				description = project.description
				url = 'https://jqwik.net/'
				licenses {
					license {
						name = 'Eclipse Public License - v 2.0'
						url = 'http://www.eclipse.org/legal/epl-v20.html'
					}
				}
				developers {
					developer {
						id = 'jlink'
						name = 'Johannes Link'
						email = 'business@johanneslink.net'
					}
				}
				scm {
					connection = 'scm:git:git://github.com/jqwik-team/jqwik.git'
					developerConnection = 'scm:git:git://github.com/jqwik-team/jqwik.git'
					url = 'https://github.com/jqwik-team/jqwik'
				}
			}
		}
	}
}

signing {
	if (!isSnapshotRelease) {
		sign publishing.publications.jqwikEngine
	}
}

test {
	useJUnitPlatform {
		includeEngines 'jqwik'
		includeEngines 'archunit'
		includeEngines 'junit-jupiter'
	}

	include 'net/**/*Properties.class'
	include 'net/**/*Example.class'
	include 'net/**/*Examples.class'
	include 'net/**/*Test.class'
	include 'net/**/*Tests.class'

	reports {
		junitXml.required = true
	}

	testLogging.showStandardStreams = showStandardStreams
}

dependencies {
	api(project(":api"))
	api("org.opentest4j:opentest4j:${opentest4jVersion}")
	api("org.junit.platform:junit-platform-commons:${junitPlatformVersion}")
	implementation("org.junit.platform:junit-platform-engine:${junitPlatformVersion}")

	testImplementation(project(":testing"))

	testImplementation("org.mockito:mockito-core:${mockitoVersion}")
	testImplementation("org.assertj:assertj-core:${assertJVersion}")
	testImplementation("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
	testImplementation("org.junit.platform:junit-platform-testkit:${junitPlatformVersion}")

	// Needed to check interferences between Jupiter and jqwik
	// And works around an annoying bug in IntelliJ running tests on packages
	testImplementation("org.junit.jupiter:junit-jupiter:${junitJupiterVersion}")

	testImplementation("com.github.stefanbirkner:system-lambda:${systemLambdaVersion}")

	testImplementation "com.tngtech.archunit:archunit-junit5-api:${archunitVersion}"
	testRuntimeOnly "com.tngtech.archunit:archunit-junit5-engine:${archunitVersion}"
}
